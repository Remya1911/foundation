package org.auth;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

@Entity
@Table(name = "user_credential")
public class UserCredential {

	@ManyToMany
	@JoinTable(name="user_credential_profs",
		joinColumns=@JoinColumn(name="username"),
		inverseJoinColumns=@JoinColumn(name="prof_id"))
	private Set<UserProfile> profiles = new HashSet<UserProfile>();

	public Set<UserProfile> getProfiles() {
		return profiles;
	}

	public void setProfiles(Set<UserProfile> profiles) {
		this.profiles = profiles;
	}

	@Id
	@Column(name = "username")
	private String username;

	@Column(name = "password")
	private String password;

	@Column(name = "status")
	private int status;

	public String getUsername() {
		return username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	public String getPassword() {
		return password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	public int getStatus() {
		return status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

}

package org.auth;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.Table;

@Entity
@Table(name = "user_profile")
public class UserProfile {

	@ManyToMany
	@JoinTable(name="user_prof_credentials",
				joinColumns=@JoinColumn(name="prof_id"),
				inverseJoinColumns=@JoinColumn(name="username"))
	private Set<UserCredential> credentials = new HashSet<UserCredential>();

	public Set<UserCredential> getCredentials() {
		return credentials;
	}

	public void setCredentials(Set<UserCredential> credentials) {
		this.credentials = credentials;
	}

	@Id
	@GeneratedValue
	@Column(name = "prof_id")
	private int profileId;

	@Column(name = "first_name")
	private String firstName;

	@Column(name = "last_name")
	private String lastName;

	@Column(name = "email_id")
	private String emailId;

	@Column(name = "phone_no")
	private String phoneNo;

	public int getProfileId() {
		return profileId;
	}

	public void setProfileId(int profileId) {
		this.profileId = profileId;
	}

	public String getFirstName() {
		return firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public String getLastName() {
		return lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public String getEmailId() {
		return emailId;
	}

	public void setEmailId(String emailId) {
		this.emailId = emailId;
	}

	public String getPhoneNo() {
		return phoneNo;
	}

	public void setPhoneNo(String phoneNo) {
		this.phoneNo = phoneNo;
	}

}

package org.main;

import org.auth.UserCredential;
import org.auth.UserProfile;
import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.cfg.Configuration;

public class Solution {

	public static void main(String[] args) {
		SessionFactory sf = new Configuration().configure().buildSessionFactory();
		Session session = sf.openSession();
		session.beginTransaction();
		
		UserCredential steve = new UserCredential();
		steve.setUsername("steve");
		steve.setPassword("jobs");
		steve.setStatus(0);
		
		UserCredential guido = new UserCredential();
		guido.setUsername("guido");
		guido.setPassword("rossum");
		guido.setStatus(0);
		
		UserProfile profile1 = new UserProfile();
		profile1.setFirstName("Steve");
		profile1.setLastName("Jobs");
		profile1.setEmailId("steve@apple.com");
		profile1.setPhoneNo("9876543210");
		
		UserProfile profile2 = new UserProfile();
		profile2.setFirstName("Guido Van");
		profile2.setLastName("Rossum");
		profile2.setEmailId("guido@python.org");
		profile2.setPhoneNo("9876543211");
		
		UserProfile profile3 = new UserProfile();
		profile3.setFirstName("James");
		profile3.setLastName("Gosling");
		profile3.setEmailId("james@java.com");
		profile3.setPhoneNo("9876543212");
		
		steve.getProfiles().add(profile1);
		steve.getProfiles().add(profile3);
		guido.getProfiles().add(profile2);
		
		profile1.getCredentials().add(steve);
		profile2.getCredentials().add(guido);
		profile3.getCredentials().add(steve);
		
		session.save(steve);
		session.save(guido);
		session.save(profile1);
		session.save(profile2);
		session.save(profile3);
		
		session.getTransaction().commit();
		session.close();
		sf.close();

	}

}

<hibernate-configuration>
<session-factory>
<!--  Database connection settings  -->
<property name="connection.driver_class">com.mysql.jdbc.Driver</property>
<property name="connection.url">jdbc:mysql://localhost:3306/sample</property>
<property name="connection.username">root</property>
<property name="connection.password"/>
<!--  JDBC connection pool (use the built-in)  -->
<property name="connection.pool_size">10</property>
<!--  SQL dialect  -->
<property name="hibernate.dialect">org.hibernate.dialect.MySQL57InnoDBDialect</property>
<!--  Disable the second-level cache  -->
<property name="cache.provider_class">org.hibernate.cache.internal.NoCacheProvider</property>
<!--  Echo all executed SQL to stdout  -->
<property name="show_sql">true</property>
<!--  Drop and re-create the database schema on startup  -->
<property name="hbm2ddl.auto">create</property>
<!--  Names the annotated entity class  -->
<mapping class="org.auth.UserCredential"/>
<mapping class="org.auth.UserProfile"/>
</session-factory>
</hibernate-configuration>
